// flow-typed signature: fda1c800d74ae7024de9d1b84c41959d
// flow-typed version: <<STUB>>/mongoose_v^4.6.8/flow_v0.43.1

/**
 * This is an autogenerated libdef stub for:
 *
 *   'mongoose'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the
 * community by sending a pull request to:
 * https://github.com/flowtype/flow-typed
 */

declare class mongoose$ObjectId {

}
declare class mongoose$Type {}

declare type mongoose$SchemaFieldDeclaration =
  { type: typeof mongoose$Type, required?: boolean, ref?: string, enum?: string[] } |
  mongoose$Type

declare type mongoose$SchemaDeclaration = {
  [string]: mongoose$SchemaFieldDeclaration | [mongoose$SchemaDeclaration | mongoose$SchemaFieldDeclaration] | mongoose$SchemaDeclaration
}

declare module 'mongoose' {
  declare export class Document {
    id: string,
    _id: mongoose$ObjectId,
    createdAt: Date
  }


  declare class Schema {
    constructor (schema: mongoose$SchemaDeclaration, options: ?{ timestamps: boolean }): Schema,
    static Types: {
      String: typeof mongoose$Type,
      Boolean: typeof mongoose$Type,
      ObjectId: typeof mongoose$Type,
      Mixed: typeof mongoose$Type,
      Date: typeof mongoose$Type,
      Number: typeof mongoose$Type
    },
    index(options: { [string]: number }): void
  }
  declare class Mongoose {
    Schema: typeof Schema,
    model<D : Document>(name: string, schema: Schema): Class<D>
  }
  declare export default Mongoose
}
