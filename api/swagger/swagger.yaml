swagger: "2.0"
info:
  version: "0.0.1"
  title: Laundree App

host: laundree.io

basePath: /api

schemes:
  - https

consumes:
  - application/json
  - application/octet-stream

produces:
  - application/json

securityDefinitions:
  userAccessToken:
    type: basic
    description: Basic auth with user access token auth.

paths:
  /users:
    x-swagger-router-controller: users
    get:
      description: List users.
      operationId: listUsers
      parameters:
        - name: email
          in: query
          description: Filter by email
          required: false
          type: string
        - name: page_size
          in: query
          description: The maximum page-size
          default: 10
          required: false
          type: integer
          minimum: 1
          maximum: 100
        - name: since
          in: query
          description: Since a given id
          required: false
          type: string
      tags:
        - Users
      responses:
        "200":
          headers: 
            Link: 
              description: Link header
              type: string
          description: A list of users
          schema:
            type: array
            items:
              $ref: "#/definitions/UserSummary"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
    post:
      description: Create a new user.
      operationId: createUser
      parameters:
        - name: body
          in: body
          required: true
          schema: 
            required:
              - displayName
              - email
              - password
            properties:
              displayName:
                type: string
              email:
                type: string
              password:
                type: string
                format: password
      tags:
        - Users
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/User"
        "400":
          description: Invalid input
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
  /users/{id}:
    x-swagger-router-controller: users
    get:
      description: Returns user with given Id.
      operationId: getUser
      parameters:
        - name: id
          in: path
          description: The user to be queried
          required: true
          type: string
      tags:
        - Users
      responses:
        "200":
          description: User
          schema:
            $ref: "#/definitions/User"
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
    delete:
      description: Delete a given user
      operationId: deleteUser
      security: 
        - userAccessToken: []
      tags: 
        - Users
      parameters:
        - name: id
          in: path
          description: The user to be deleted
          required: true
          type: string
      responses:
        "204":
          description: Success
        "404":
          description: User not found
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema: 
            $ref: "#/definitions/Error"
  /users/{id}/start-password-reset:
    x-swagger-router-controller: users
    post:
      description: Start user password reset
      operationId: startPasswordReset
      parameters:
        - name: id
          in: path
          required: true
          description: The user to be queried
          type: string
      tags:
        - Users
      responses:
        "204":
          description: Success
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
  /users/{id}/password-reset:
    x-swagger-router-controller: users
    post:
      description: Reset user password
      operationId: passwordReset
      parameters:
        - name: id
          in: path
          required: true
          description: The user to be queried
          type: string
        - name: body
          in: body
          required: true
          schema: 
            required:
              - password
              - token
            properties:
              password:
                type: string
                format: password
              token:
                type: string
      tags:
        - Users
      responses:
        "204":
          description: Success
        "400":
          description: Invalid input
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
  /users/{id}/start-email-verification:
    x-swagger-router-controller: users
    post:
      description: Start email verification
      operationId: startEmailVerification
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema: 
            required:
              - email
            properties:
              email:
                type: string
                format: email
      tags:
        - Users
      responses:
        "204":
          description: Success
        "400":
          description: Invalid input
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
  /users/{id}/verify-email:
    x-swagger-router-controller: users
    post:
      description: Verify a user email
      operationId: verifyEmail
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema: 
            required:
              - email
              - token
            properties:
              email:
                type: string
                format: email
              token:
                type: string
      tags:
        - Users
      responses:
        "204":
          description: Success
        "400":
          description: Invalid input
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
  /tokens:
    x-swagger-router-controller: tokens
    get:
      description: List available tokens
      security: 
        - userAccessToken: []
      operationId: listTokens
      tags:
        - Tokens
      parameters:
        - name: page_size
          in: query
          description: The maximum page-size
          default: 10
          required: false
          type: integer
          minimum: 1
          maximum: 100
        - name: since
          in: query
          description: Since a given id
          required: false
          type: string
      responses:
        "200":
          description: Success
          headers:
            Link: 
              description: Link header
              type: string
          schema:
            type: array
            items:
              $ref: "#/definitions/TokenSummary"

        "403":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"

        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
    post:
      description: Create a new token
      operationId: createToken
      security: 
        - userAccessToken: []
      tags:
        - Tokens
      parameters:
        - name: body
          in: body
          schema:
            properties:
              name:
                type: string
  
      responses:
        "200":
          description: Success
          schema: 
            $ref: "#/definitions/TokenWithSecret"
        "400":
          description: Invalid input
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"

        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
  /tokens/{id}:
    x-swagger-router-controller: tokens
    get:
      operationId: fetchToken
      tags:
        - Tokens
      security: 
        - userAccessToken: []
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Token"
        "404":
          description: Token not found
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
    delete:
      operationId: deleteToken
      tags:
        - Tokens
      security: 
        - userAccessToken: []
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        "204":
          description: Success
        "404":
          description: Token not found
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
  /laundries:
    x-swagger-router-controller: laundries
    get:
      security: 
        - userAccessToken: []
      description: Lists the current laundries
      operationId: listLaundries
      parameters:
        - name: page_size
          in: query
          description: The maximum page-size
          default: 10
          required: false
          type: integer
          minimum: 1
          maximum: 100
        - name: since
          in: query
          description: Since a given id
          required: false
          type: string
      tags:
        - Laundries
      responses:
        "200":
          description: Success
          headers:
            Link: 
              description: Link header
              type: string
          schema:
            type: array
            items:
              $ref: "#/definitions/LaundrySummary"
        "400":
          description: Invalid input
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
    post:
      tags:
        - Laundries
      security: 
        - userAccessToken: []
      description: Create a laundry
      operationId: createLaundry
      parameters:
        - name: body
          in: body
          schema:
            required: 
              - name
            properties:
              name: 
                type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Laundry"
        "400":
          description: Invalid input
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
  /laundries/{id}:
    x-swagger-router-controller: laundries
    get:
      operationId: fetchLaundry
      tags:
        - Laundries
      security: 
        - userAccessToken: []
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Laundry"
        "404":
          description: Laundry not found
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
    delete:
      operationId: deleteLaundry
      tags:
        - Laundries
      security: 
        - userAccessToken: []
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        "204":
          description: Success
        "404":
          description: Laundry not found
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
      
  /laundries/{id}/machines:
    x-swagger-router-controller: machines
    get:
      description: Lists the machines
      operationId: listMachines
      tags:
        - Machines
        - Laundries
      security:
        - userAccessToken: []
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: Laundry id
        - name: page_size
          in: query
          description: Page size
          default: 10
          required: false
          type: integer
          minimum: 1
          maximum: 100
        - name: since
          in: query
          description: Since a given id
          required: false
          type: string
      responses:
        "200":
          description: Success
          headers:
            Link: 
              description: Link header
              type: string
          schema:
            type: array
            items:
              $ref: "#/definitions/MachineSummary"
        "404":
          description: Laundry not found
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
    post:
      operationId: createMachine
      security:
        - userAccessToken: []
      tags:
        - Machines
        - Laundries
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: Machine id
        - name: body
          in: body
          required: true
          schema:
            required:
              - name
            properties:
              name:
                type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Machine"
        "404":
          description: Laundry not found
          schema:
            $ref: "#/definitions/Error"
        "400":
          description: Invalid input
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
  /machines/{id}:
    x-swagger-router-controller: machines
    get:
      operationId: fetchMachine
      tags:
        - Machines
      security:
        - userAccessToken: []
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: Machine id
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Machine"
        "404":
          description: Machine not found
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
    delete:
      operationId: deleteMachine
      security:
        - userAccessToken: []
      tags:
        - Machines
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: Machine id
      responses:
        "204":
          description: Success
        "404":
          description: Machine not found
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
      
  /machines/{machineId}/bookings:
    x-swagger-router-controller: bookings
    get:
      description: Lists the bookings
      operationId: listBookings
      tags:
        - Bookings
        - Machines
      security:
        - userAccessToken: []
      parameters:
        - name: machineId
          in: path
          required: true
          type: string
          description: Machine id
        - name: page_size
          in: query
          description: Page size
          default: 10
          required: false
          type: integer
          minimum: 1
          maximum: 100
        - name: from
          in: query
          description: From date in seconds since epoch
          required: true
          type: integer
        - name: to
          in: query
          description: To date in seconds since epoch
          required: true
          type: integer
          format: date-time
      responses:
        "200":
          description: Success
          headers:
            Link: 
              description: Link header
              type: string
          schema:
            type: array
            items:
              $ref: "#/definitions/BookingSummary"
        "404":
          description: Machine not found
          schema:
            $ref: "#/definitions/Error"
        "400":
          description: Invalid input
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
    post:
      operationId: createBooking
      tags:
        - Bookings
      security:
        - userAccessToken: []
      parameters:
        - name: machineId
          in: path
          required: true
          type: string
          description: Machine id
        - name: body
          in: body
          required: true
          schema:
            required:
              - from
              - to
            properties:
              from:
                type: string
                format: date-time
              to:
                type: string
                format: date-time
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Booking"
        "400":
          description: Invalid input
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: Machine not found
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
      

  /bookings/{id}:
    x-swagger-router-controller: bookings
    get:
      security:
        - userAccessToken: []
      operationId: fetchBooking
      tags:
        - Bookings
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: Booking id
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Booking"
        "404":
          description: Booking not found
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
    delete:
      security:
        - userAccessToken: []
      operationId: deleteBooking
      tags:
        - Bookings
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: Booking id
      responses:
        "204":
          description: Success
        "404":
          description: Booking not found
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  User:
    required:
      - id
      - href
      - name
      - displayName
      - photo
      - tokens
    properties:
      id:
        type: string
      photo:
        type: string
        format: url
      displayName:
        type: string
      lastSeen:
        type: string
        format: date
      name:
        properties:
          familyName: 
            type: string
          givenName: 
            type: string
          middleName: 
            type: string
      href:
        type: string
        format: url
      laundries:
        type: array
        items: 
          $ref: "#/definitions/LaundrySummary"
      tokens:
        type: array
        items:
          $ref: "#/definitions/TokenSummary"

  UserSummary:
    required:
      - id
      - displayName
      - href
    properties:
      id:
        type: string
      displayName:
        type: string
      href:
        type: string
        format: url

  Laundry:
    required:
      - id
      - name
      - href
      - owners
      - users
    properties:
      id:
        type: string
      name: 
        type: string
      href: 
        type: string
      owners:
        type: array
        items: 
          $ref: "#/definitions/UserSummary"
      users:
        type: array
        items: 
          $ref: "#/definitions/UserSummary"

  LaundrySummary:
    required:
      - id
      - name
      - href
    properties:
      id:
        type: string
      name:
        type: string
      href:
        type: string
        format: url 

  Token:
    required:
      - id
      - name
      - href
      - owner
    properties:
      id:
        type: string
      name: 
        type: string
      href: 
        type: string
      lastSeen:
        type: string
        format: date
      owner:
        $ref: "#/definitions/UserSummary"
  TokenWithSecret:
    required:
      - id
      - name
      - href
      - owner
      - secret
    properties:
      id:
        type: string
      secret:
        type: string
      name: 
        type: string
      href: 
        type: string
      lastSeen:
        type: string
        format: date
      owner:
        $ref: "#/definitions/UserSummary"

  TokenSummary:
    required:
      - id
      - name
      - href
    properties:
      id:
        type: string
      name:
        type: string
      href: 
        type: string
  Booking:
    required:
      - id
      - href
      - from
      - to
    properties:
      id:
        type: string
      href:
        type: string
      from:
        type: string
        format: date-time
      to:
        type: string
        format: date-time
      owner:
        type: string

  BookingSummary:
    required:
      - id
      - href
    properties:
      id:
        type: string
      href:
        type: string
  MachineSummary:
    required:
      - id
      - href
      - name
    properties:
      id:
        type: string
      href:
        type: string
      name: 
        type: string
  Machine:
    required:
      - id
      - href
      - name
    properties:
      id:
        type: string
      href:
        type: string
      name: 
        type: string
  Error:
    required:
      - message
    properties:
      message:
        type: string
