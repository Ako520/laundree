swagger: "2.0"
info:
  version: "0.0.1"
  title: Laundree App

host: localhost:3000

basePath: /api

schemes:
  - http
  - https

consumes:
  - application/json
  - application/octet-stream

produces:
  - application/json

paths:
  /users:
    x-swagger-router-controller: users
    get:
      description: List users.
      operationId: listUsers
      parameters:
        - name: email
          in: query
          description: Filter by email
          required: false
          type: string
        - name: page_size
          in: query
          description: The maximum page-size
          default: 10
          required: false
          type: integer
          minimum: 1
          maximum: 100
        - name: since
          in: query
          description: Since a given id
          required: false
          type: string
      tags:
        - Users
      responses:
        "200":
          headers: 
            Link: 
              description: Link header
              type: string
          description: A list of users
          schema:
            type: array
            items:
              $ref: "#/definitions/User"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
    post:
      description: Create a new user.
      operationId: createUser
      parameters:
        - name: body
          in: body
          required: true
          schema: 
            $ref: "#/definitions/CreateUserRequest"
      tags:
        - Users
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/User"
        "400":
          description: Invalid input
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
  /users/{id}:
    x-swagger-router-controller: users
    get:
      description: Returns user with given Id.
      operationId: getUser
      parameters:
        - name: id
          in: path
          description: The user to be queried
          required: true
          type: string
      tags:
        - Users
      responses:
        "200":
          description: User
          schema:
            $ref: "#/definitions/User"
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
  /users/{id}/start-password-reset:
    x-swagger-router-controller: users
    post:
      description: Start user password reset
      operationId: startPasswordReset
      parameters:
        - name: id
          in: path
          required: true
          description: The user to be queried
          type: string
      tags:
        - Users
      responses:
        "204":
          description: Success
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
  /users/{id}/password-reset:
    x-swagger-router-controller: users
    post:
      description: Reset user password
      operationId: passwordReset
      parameters:
        - name: id
          in: path
          required: true
          description: The user to be queried
          type: string
        - name: body
          in: body
          required: true
          schema: 
            $ref: "#/definitions/ResetPasswordRequest"
      tags:
        - Users
      responses:
        "204":
          description: Success
        "400":
          description: Invalid input
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
      
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  CreateUserRequest:
    required:
      - displayName
      - email
      - password
    properties:
      displayName:
        type: string
      email:
        type: string
      password:
        type: string
        format: password

  ResetPasswordRequest:
    required:
      - password
      - token
    properties:
      password:
        type: string
        format: password
      token:
        type: string

  User:
    required:
      - id
      - href
    properties:
      id:
        type: string
      emails:
        type: array
        items:
          type: string
          format: email
      photo:
        type: string
      displayName:
        type: string
      name:
        $ref: "#/definitions/Name"
      href:
        type: string
        format: uri
  Name:
    properties:
      familyName: 
        type: string
      givenName: 
        type: string
      middleName: 
        type: string

  Error:
    required:
      - message
    properties:
      message:
        type: string
